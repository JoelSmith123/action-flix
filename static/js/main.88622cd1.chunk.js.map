{"version":3,"sources":["actions/index.js","containers/SignUp/SignUp.js","thunks/signIn.js","thunks/createUser.js","components/NoMatch/NoMatch.js","containers/MovieCard/MovieCard.js","thunks/postFavorite.js","thunks/deleteFavorite.js","cleaners/cleanMovies.js","thunks/getFavorites.js","containers/MovieContainer/MovieContainer.js","constants.js","thunks/fetchMovies.js","containers/Header/Header.js","components/App/App.js","serviceWorker.js","reducers/index.js","reducers/isLoadingReducer.js","reducers/hasErroredReducer.js","reducers/moviesReducer.js","reducers/signInReducer.js","reducers/getUserNameReducer.js","index.js"],"names":["isLoading","check","type","hasErrored","fetchDataSuccess","movies","signIn","id","name","userName","SignUp","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","value","setState","defineProperty","enableButtons","state","showSignIn","email","password","disableButton","handleSubmit","preventDefault","_this$state","props","checkUserLogin","createNewUser","handleSignUp","errorAction","inherits","createClass","key","_this$state2","signUpBtnName","newUserBtnName","popUpMessage","errorMessage","user","react_default","a","createElement","Redirect","to","className","onSubmit","placeholder","onChange","disabled","onClick","undefined","Component","connect","userId","dispatch","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","method","body","JSON","stringify","headers","Content-Type","sent","ok","Error","statusText","json","data","t0","stop","_x","apply","arguments","getUser","createUser","bool","NoMatch","MovieCard","_getPrototypeOf2","_len","length","args","Array","_key","concat","checkSignedIn","history","push","find","movie","movieId","favorite","toggleFavorite","title","deleteFavorite","addFavorite","posterPath","releaseDate","voteAverage","overview","_this2","favoriteIcon","src","alt","viewBox","d","strokeDasharray","textAnchor","x","y","movie_id","user_id","poster_path","release_date","vote_average","postFavorite","movieTitle","url","withRouter","cleanMovies","favorites","allMovies","results","map","forEach","favoriteMovie","abrupt","_x2","getFavorites","MovieContainer","_componentDidMount","fetchMovies","favoriteMovies","filter","containers_MovieCard_MovieCard","assign","uuid","location","actionMovies","currentMovies","Header","toggleList","listOpen","handleLogOut","logUserOut","resetFavorites","redirectHome","arrowIcon","notLoggedIn","NavLink","loggedIn","proptypes","logOut","PropTypes","func","isRequired","App","loginSelected","containers_Header_Header","Switch","Route","exact","path","render","containers_MovieContainer_MovieContainer","component","Boolean","window","hostname","match","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","wrapper","es","BrowserRouter","components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88622cd1.chunk.js","sourcesContent":["export const isLoading = (check) => ({\n  type: 'IS_LOADING',\n  isLoading: check\n})\n\nexport const hasErrored = (check) => ({\n  type: 'HAS_ERRORED',\n  hasErrored: check\n})\n\nexport const fetchDataSuccess = (movies) => ({\n  type: 'FETCH_DATA_SUCCESS',\n  movies\n})\n\nexport const signIn = (id, name, userName) => ({\n  type: 'SIGN_IN',\n  id,\n  name,\n  userName\n})\n\nexport const logOut = () => ({\n  type: 'LOG_OUT'\n})\n\nexport const resetFavorites = () => ({\n  type: 'RESET_FAVORITES'\n})\n\nexport const toggleFavorite = (movieTitle) => ({\n  type: 'TOGGLE_FAVORITE',\n  movieTitle\n})\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { getUser } from '../../thunks/signIn.js'\nimport { createUser } from '../../thunks/createUser.js'\nimport { hasErrored } from '../../actions'\nimport { connect } from 'react-redux'\nimport './SignUp.css'\nimport PropTypes from 'prop-types'\n\n\nexport class SignUp extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '', \n      email: '', \n      password: '',\n      showSignIn: true, \n      disableButton: true\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value\n    }, () => this.enableButtons())\n  }\n\nenableButtons = () => {\n  if(this.state.showSignIn && this.state.email !== '' && this.state.password  !== '') {\n    this.setState({\n      disableButton: false\n    })\n  } else if (!this.state.showSignIn && this.state.email !== ''  && this.state.password !== '' && this.state.name !== '') {\n    this.setState({\n      disableButton: false\n    })\n  }\n}\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { name, email, password } = this.state\n    if (this.state.showSignIn) {\n      this.props.checkUserLogin(email, password)      \n    } else {\n      this.props.createNewUser(name, email, password)\n    }\n\n    this.setState({\n      name: '',\n      email: '',\n      password: ''\n    })\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault()\n    this.setState({showSignIn: !this.state.showSignIn})\n    this.props.errorAction(false)\n  }\n\n  render() {\n    const {name, email, password, showSignIn} = this.state\n    const signUpBtnName = showSignIn ? 'Sign In' : 'Sign Up'\n    const newUserBtnName = showSignIn ? 'New user? Sign up!' : 'Log in'\n    const popUpMessage = showSignIn ? 'Please Log In' : 'Create Account'\n    const errorMessage = showSignIn ? 'email and password do not match' : 'email already exists'\n\n    if (this.props.user) return <Redirect to='/' />\n    return (\n      <div className=\"form-container\">\n        <div className=\"inner-container\">\n          <article className=\"message-container\">\n            <h1>Welcome To Action Flix!</h1>\n            <h3 className='popup-message'>{popUpMessage}</h3>\n          </article>\n          <form onSubmit={ this.handleSubmit }>\n        {\n          !showSignIn ? <input name=\"name\" value={name} placeholder='Enter name ...' onChange={ this.handleChange } /> : ''\n        }\n          <input name=\"email\" value={email} placeholder='Email address' onChange={ this.handleChange } className='email-input'/>\n          <input name=\"password\"  type=\"password\" value={password} placeholder='Password' onChange={ this.handleChange } />\n          <button className='submit-sign-up' disabled={this.state.disableButton} onClick={this.handleSubmit}>{signUpBtnName}</button>        \n          <button className='signin-toggle' onClick={this.handleSignUp}>{newUserBtnName}</button>\n          { this.props.hasErrored ? <h3 className='error-message'>{errorMessage}</h3> : undefined }\n          </form> \n        </div>\n        <div className='login-side-page'>\n          <div className='side-page-text'>\n            <h2 className='login-page-title'>Action Flix</h2>\n            <h3 className='slogan'>Everything you need to know in one place.</h3>\n            <p className='description'>All-inclusive access to action films. Track your favorite movies. Stay up-to-date with new movies.</p>\n          </div>\n          <div className='circles-container'>\n            <div className='circle-five'></div>\n            <div className='circle-six'></div>\n            <div className='circle-two'></div>\n            <div className='circle-one'></div>\n            <div className='circle-four'></div>\n            <div className='circle-three'></div>\n            <div className='large-circle'></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSignUp.propTypes = {\n  user: PropTypes.number.isRequired, \n  hasErrored: PropTypes.bool.isRequired, \n  checkUserLogin: PropTypes.func.isRequired, \n  createNewUser: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.userId,\n  hasErrored: state.hasErrored\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  checkUserLogin: (email, password) => dispatch(getUser(email, password)),\n  createNewUser: (name, email, password) => dispatch(createUser(name, email, password)),\n  errorAction: (bool) => dispatch(hasErrored(bool))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n\n","import { isLoading, hasErrored, signIn } from '../actions/index.js'\n\nexport const getUser = (email, password) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch('http://localhost:3000/api/users', {\n        method: 'POST',\n        body: JSON.stringify({ email: email, password: password }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (!response.ok) {\n        dispatch(isLoading(false))\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const user = await response.json()\n      dispatch(signIn(user.data.id, user.data.name))\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","import { isLoading, hasErrored, signIn } from '../actions/index.js'\n\nexport const createUser = (name, email, password) => {\n  const url = 'http://localhost:3000/api/users/new'\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({ name, email, password }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (!response.ok) {\n        dispatch(isLoading(false))\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const user = await response.json()\n      dispatch(signIn(user.id, name))\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport const NoMatch = () => {\n  return <Redirect to='/' />\n}","import React from 'react'\nimport './MovieCard.css'\nimport { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { postFavorite } from '../../thunks/postFavorite.js'\nimport { deleteFavorite } from '../../thunks/deleteFavorite.js'\nimport { toggleFavorite } from '../../actions/index.js'\nimport PropTypes from 'prop-types'\n\n\n\nexport class MovieCard extends Component {\n\n  checkSignedIn = () => {\n    if (this.props.userId === '') {\n      this.props.history.push(`/login`)\n    } else {\n      const isFavorite = this.props.movies.find(movie => {\n        return movie.movieId === this.props.movieId\n      })\n      if(!isFavorite.favorite) {\n        this.props.addFavorite(this.props.movieId, this.props.userId, this.props.title, this.props.posterPath, this.props.releaseDate, this.props.voteAverage, this.props.overview)\n        this.props.toggleFavorite(this.props.title)\n      } else {\n        this.props.toggleFavorite(this.props.title)\n        this.props.deleteFavorite(this.props.userId, this.props.movieId)\n      }\n    }\n  }\n\n  render() {\n   const favoriteIcon = this.props.favorite ? '../images/full-popcorn.svg' : '../images/empty-popcorn.svg'\n    return (\n      <article className='movie-card'>\n        <img className='movie-img' src={this.props.posterPath} alt='movie poster' />\n        <div className='movie-info-text'>\n          <div className='movie-icon-container'>\n            <svg className='movie-rating-chart' viewBox=\"0 0 36 36\">\n              <path className='outline-circle'\n              d=\"M18 2.0845\n              a 15.9155 15.9155 0 0 1 0 31.831\n              a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray=\"100, 100\"               \n              />\n              <path className='circle'\n              d=\"M18 2.0845\n              a 15.9155 15.9155 0 0 1 0 31.831\n              a 15.9155 15.9155 0 0 1 0 -31.831\"\n              strokeDasharray={`${this.props.voteAverage * 10}, 100`}               \n              />\n              <text textAnchor=\"middle\" x=\"17\" y=\"22\" className='movie-rating'>{this.props.voteAverage}</text>\n            </svg>\n            <img className='popcorn-icon' src={favoriteIcon} alt='full popcorn' onClick={() => this.checkSignedIn()} />\n          </div>\n          <h3 className='movie-title'>{this.props.title}</h3>\n          <p className='movie-release'>{this.props.releaseDate}</p>\n          <div className='movie-description'>\n            {this.props.overview}\n          </div>\n        </div>\n      </article>\n    )\n  }\n}\n\nMovieCard.propTypes = {\n  addFavorite: PropTypes.func.isRequired, \n  toggleFavorite: PropTypes.func.isRequired, \n  deleteFavorite: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired, \n  userId: PropTypes.number\n}\n\n\nexport const mapDispatchToProps = (dispatch) => ({\n  addFavorite: (movieId, userId, title, posterPath, releaseDate, voteAverage, overview) => dispatch(postFavorite(movieId, userId, title, posterPath, releaseDate, voteAverage, overview)),\n  toggleFavorite: (movieTitle) => dispatch(toggleFavorite(movieTitle)),\n  deleteFavorite: (userId, movieId) => dispatch(deleteFavorite(userId, movieId))\n})\n\nexport const mapStateToProps = (state, props) => ({\n  movies: state.movies,\n  userId: state.userId,\n  movieId: props.movieId, \n  title: props.title, \n  posterPath: props.posterPath, \n  releaseDate: props.releaseDate, \n  voteAverage: props.voteAverage, \n  overview: props.overview, \n  favorite: props.favorite\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MovieCard))\n\n","import { isLoading, hasErrored } from '../actions'\n\nexport const postFavorite = (movieId, userId, title, posterPath, releaseDate, voteAverage, overview) => {\n  const url = 'http://localhost:3000/api/users/favorites/new'\n\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          movie_id: movieId,\n          user_id: userId,\n          title: title,\n          poster_path: posterPath,\n          release_date: releaseDate,\n          vote_average: voteAverage,\n          overview: overview\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (!response.ok) {\n        dispatch(isLoading(false))\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","import { isLoading, hasErrored } from '../actions/index.js'\n\nexport const deleteFavorite = (userId, movieId) => {\n  const url = `http://localhost:3000/api/users/${userId}/favorites/${movieId}`\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url, {\n        method: 'DELETE',\n        body: JSON.stringify({\n          user_id: userId,\n          movie_id: movieId\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      if (!response.ok) {\n        dispatch(isLoading(false))\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","export const cleanMovies = async (movies, favorites) => {\n  const allMovies = movies.results.map(movie => {\n    let favorite = false\n    if (favorites) {\n      favorites.forEach(favoriteMovie => {\n        if (favoriteMovie.title === movie.title) {\n          favorite = true\n        }\n      })\n    }\n    return {\n      movieId: movie.id,\n      posterPath: `http://image.tmdb.org/t/p/w185/${movie.poster_path}`,\n      title: movie.title,\n      voteAverage: movie.vote_average,\n      releaseDate: movie.release_date,\n      overview: movie.overview,\n      favorite\n    }\n  })\n  return allMovies\n}\n","import { isLoading, hasErrored } from '../actions/index.js'\n\nexport const getFavorites = (userId) => {\n  const url = `http://localhost:3000/api/users/${userId}/favorites`\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url)\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const favorites = await response.json()\n      return favorites.data\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport uuid from 'uuid'\nimport MovieCard from '../MovieCard/MovieCard'\nimport './MovieContainer.css'\nimport { connect } from 'react-redux'\nimport { fetchMovies } from '../../thunks/fetchMovies.js'\nimport { movieDataBaseKey }  from '../../../src/constants.js'\nimport { getFavorites } from '../../thunks/getFavorites.js'\nimport PropTypes from 'prop-types'\n\n\n\nexport class MovieContainer extends Component {\n  async componentDidMount() {\n    let apiKey = movieDataBaseKey\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&with_genres=28`\n    await this.props.fetchMovies(url, this.props.userId)\n  }\n\n  render() {\n    const favoriteMovies = this.props.movies.filter(movie => {\n      return movie.favorite === true\n    }).map(movie => {\n      return <MovieCard {...movie} key={uuid()} />\n    })\n\n    if (this.props.movies.length && this.props.location === '/') {\n      const actionMovies = this.props.movies.map(movie => (<MovieCard {...movie} key={uuid()} />))\n      return (\n        <div className='movie-container action-movies'>\n        {actionMovies}\n        </div>\n        )\n    } else if (favoriteMovies.length > 0 && this.props.location === '/favorites') {\n      return (\n        <div className='movie-container favorite-movies'>\n        {favoriteMovies}\n        </div>\n        )\n    } else if (favoriteMovies.length === 0 && this.props.location === '/favorites') {\n      return (\n        <section className='favorites-error'>\n        <h3>Sorry, you have no favorites!</h3>\n        <p>Please return to the homepage to add movies to your favorites</p>\n        </section>\n        )\n    } else if (this.props.isLoading) {\n      return <h1 className='loading'>Loading...</h1>\n    } else {\n      return <h3 className='server-error'>404 Error</h3>\n    }\n  }\n}\n\nMovieContainer.propTypes = {\n  fetchMovies: PropTypes.func.isRequired, \n  getFavorites: PropTypes.func.isRequired, \n  userId: PropTypes.number.isRequired, \n  isLoading: PropTypes.bool.isRequired, \n  hasErrored: PropTypes.bool.isRequired, \n  movies: PropTypes.array.isRequired\n}\n\nexport const mapStateToProps = (state) => {\n  return {\n    userId: state.userId,\n    movies: state.movies,\n    isLoading: state.isLoading,\n    hasErrored: state.hasErrored\n  }}\n\n  export const mapDispatchToProps = (dispatch) => ({\n    fetchMovies: (url, userId) => dispatch(fetchMovies(url, userId)),\n    getFavorites: (userId) => dispatch(getFavorites(userId)) \n  })\n\n  export default connect(mapStateToProps, mapDispatchToProps)(MovieContainer)\n","const movieDataBaseKey =  '8d54c10134c07bfb8e01ded9e30524be';\n\nexport {\n  movieDataBaseKey\n}","import { isLoading, hasErrored, fetchDataSuccess } from '../actions/index.js'\nimport { cleanMovies } from '../cleaners/cleanMovies.js'\nimport { getFavorites } from './getFavorites'\n\nexport const fetchMovies = (url, userId) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true))\n      const response = await fetch(url)\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      dispatch(isLoading(false))\n      const movies = await response.json()\n      let favorites\n      if (userId) {\n        favorites = await dispatch(getFavorites(userId))\n      }\n      const currentMovies = await cleanMovies(movies, favorites)\n      dispatch(fetchDataSuccess(currentMovies))\n    } catch (error) {\n      dispatch(hasErrored(true))\n    }\n  }\n}\n","import React, { Component } from 'react'; \nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { logOut, resetFavorites } from '../../actions/index.js'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nimport PropTypes from 'prop-types'\n\nexport class Header extends Component {\n  constructor() {\n    super()\n    this.state = {\n      listOpen: false,\n      redirectHome: false\n    }\n  }\n\n  toggleList = () => {\n    this.setState({\n      listOpen: !this.state.listOpen\n    })\n  }\n\n  handleLogOut = () => {\n    this.props.logUserOut()\n    this.props.resetFavorites()\n    this.props.history.push('/')\n  }\n\n  render() {\n\n    const arrowIcon = this.state.listOpen ? '../images/up-arrow.svg' : '../images/down-arrow.svg'\n\n    const notLoggedIn = (\n      <header className='header'>\n        <NavLink to='/' className='header-title-navlink' ><h1 className='header-title'>Action Flix</h1></NavLink>\n        <NavLink to='/login'><button className='login-btn'>Login</button></NavLink>\n      </header>   \n    )\n  \n    const loggedIn = (\n      <header className=\"header\">\n        <h1 className='header-title'>Action Flix</h1>\n          <div className='dropdown-wrapper'>\n            <div className='dropdown-header'>\n              <div className='dropdown-title' onClick={() => this.toggleList()}>\n                <h3 className='welcome-user'>Hello {this.props.name}</h3>\n                <img className='arrow-icon' src={arrowIcon} alt='down arrow' />\n              </div>\n            </div>\n            { !this.state.listOpen ?  null : \n              <article className='dropdown-list'>\n                <NavLink to='/'><button className='home-btn'>Home</button></NavLink>\n                <NavLink to='/favorites'><button className='favorites-btn'>Favorites</button></NavLink>\n                <button className='logout-btn' onClick={() => this.handleLogOut()}>Sign Out</button>\n              </article>\n              \n            }\n          </div>\n      </header>\n    )\n    if (this.props.user) {\n       return loggedIn\n    }\n    return (\n        notLoggedIn \n    )\n  }\n}\n\n\nHeader.proptypes = {\n  logOut: PropTypes.func.isRequired\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.userId,\n  name: state.userName\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logUserOut: () => dispatch(logOut()),\n  resetFavorites: () => dispatch(resetFavorites())\n}) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header))\n\n  ","import React, { Component } from 'react';\nimport SignUp from '../../containers/SignUp/SignUp'\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport { NoMatch } from '../NoMatch/NoMatch'\nimport  MovieContainer  from '../../containers/MovieContainer/MovieContainer'\nimport Header from '../../containers/Header/Header'; \n\n\nexport class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loginSelected: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" render={() => <MovieContainer location='/' />}/>\n          <Route exact path='/login' component={ SignUp }/>\n          <Route exact path='/favorites' render={() => <MovieContainer location='/favorites' />} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { isLoadingReducer } from './isLoadingReducer.js'\nimport { hasErroredReducer } from './hasErroredReducer.js'\nimport { moviesReducer } from './moviesReducer.js'\nimport { signInReducer } from './signInReducer.js'\nimport { getUserNameReducer } from './getUserNameReducer.js'\n\nexport const rootReducer = combineReducers({\n  isLoading: isLoadingReducer,\n  hasErrored: hasErroredReducer,\n  movies: moviesReducer,\n  userId: signInReducer,\n  userName: getUserNameReducer\n})\n","export const isLoadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_LOADING':\n      return action.isLoading\n    default:\n      return state\n  }\n}\n","export const hasErroredReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'HAS_ERRORED':\n      return action.hasErrored\n    default:\n      return state\n  }\n}\n","export const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_DATA_SUCCESS':\n      return action.movies\n    case 'TOGGLE_FAVORITE':\n      const newState = state.map(movie => {\n        if (movie.title === action.movieTitle) {\n          movie.favorite = !movie.favorite\n        }\n        return movie\n      })\n      return newState\n    case 'RESET_FAVORITES':\n      const updatedState = state.map(movie => {\n        movie.favorite = false\n        return movie\n      })\n      return updatedState\n    default:\n      return state\n  }\n}\n","export const signInReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return action.id\n    case 'LOG_OUT':\n      return ''\n    default:\n      return state\n  }\n}\n","export const getUserNameReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return action.name\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'; \nimport { Provider } from 'react-redux'; \nimport { rootReducer } from './reducers/index.js'; \nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\nconst wrapper = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\nReactDOM.render(wrapper, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}